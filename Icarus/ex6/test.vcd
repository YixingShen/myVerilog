$date
	Mon Sep 07 15:40:38 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module top $end
$var wire 8 ! out [7:0] $end
$var wire 1 " carryout $end
$var reg 1 # carryin $end
$var reg 8 $ input1 [7:0] $end
$var reg 8 % input2 [7:0] $end
$scope module uut $end
$var wire 1 # cin $end
$var wire 8 & in1 [7:0] $end
$var wire 8 ' in2 [7:0] $end
$var wire 9 ( tempsum [8:0] $end
$var wire 8 ) sum [7:0] $end
$var wire 1 " cout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#200
b1 !
b1 )
b1 (
b1 $
b1 &
#400
b11 !
b11 )
b11 (
b10 %
b10 '
#600
b10 !
b10 )
b10 (
b0 $
b0 &
#800
b11 !
b11 )
b11 (
1#
#1000
b1 !
b1 )
b1 (
b0 %
b0 '
#1200
b10000 !
b10000 )
b10000 (
b1111 $
b1111 &
#1400
b11111 !
b11111 )
b11111 (
b1111 %
b1111 '
#1800
